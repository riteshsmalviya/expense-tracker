pipeline {
    agent any

    environment {
        // MySQL credentials
        MYSQL_ROOT_PASSWORD = credentials('mysql-root-pass')
        MYSQL_DATABASE = credentials('mysql-database')

        // Spring Boot DB credentials
        SPRING_DATASOURCE_USERNAME = credentials('spring-db-user')
        SPRING_DATASOURCE_PASSWORD = credentials('spring-db-pass')
        SPRING_DATASOURCE_URL      = "jdbc:mysql://mysql-db:3306/expenseDB?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true"

        // AI API
        DEEPSEEK_API_KEY = credentials('deepseek-key')
        DEEPSEEK_API_URL = credentials('deepseek-url')
    }

    stages {
        stage('Set Build Name') {
            steps {
                script {
                    // Use branch name + date-time as build display name
                    def branch = env.BRANCH_NAME ?: "main"
                    def now = new Date().format("yyyy-MM-dd_HH-mm-ss")
                    currentBuild.displayName = "${branch}-${now}"
                }
            }
        }

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Clean Environment') {
            steps {
                bat '''
                echo "ðŸ§¹ Cleaning up existing containers and volumes"
                docker compose down -v
                echo "âœ… Clean up completed"
                '''
            }
        }

        stage('Build & Deploy') {
            steps {
                bat '''
                echo "ðŸ”¹ Starting Docker Compose build & deploy"
                docker compose up --build -d
                echo "âœ… Build and deploy completed"
                '''
            }
        }
    }
}
