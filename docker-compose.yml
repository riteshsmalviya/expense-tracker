version: '3.8'

services:
  # MySQL Database
  mysql-db:
    image: mysql:8.0
    container_name: expense-tracker-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: expense_tracker
      MYSQL_USER: expense_user
      MYSQL_PASSWORD: expense_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - expense-tracker-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 30s

  # Spring Boot Application
  expense-tracker-api:
    build: .
    container_name: expense-tracker-app
    depends_on:
      mysql-db:
        condition: service_healthy
    environment:
      # Database configuration
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/expense_tracker
      SPRING_DATASOURCE_USERNAME: expense_user
      SPRING_DATASOURCE_PASSWORD: expense_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      
      # JPA/Hibernate configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQLDialect
      
      # Application configuration
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8080
      
      # AI API configuration (you'll need to set these)
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY:-your-api-key-here}
      DEEPSEEK_API_URL: ${DEEPSEEK_API_URL:-https://openrouter.ai/api/v1/chat/completions}
      DEEPSEEK_API_TIMEOUT_CONNECT: 120
      DEEPSEEK_API_TIMEOUT_READ: 120
    ports:
      - "8080:8080"
    networks:
      - expense-tracker-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local

networks:
  expense-tracker-network:
    driver: bridge